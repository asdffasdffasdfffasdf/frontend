{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport router from './router.js';\nimport axios from 'axios';\ncreateApp(App).use(router).mount('#app');\naxios.get('http://43.200.120.63/api/Node1').then(response => {\n  // 데이터 가져오기\n  console.log(response);\n  const data = response.data; // 'data' 배열을 변수에 저장\n\n  // 데이터의 각 요소에서 필요한 값을 변수로 추출\n  const tempArray = data.map(item => item.temp); // 'temp' 값을 배열로 추출\n  const lastTempValue = tempArray[tempArray.length - 1]; //현재 temp값\n  const takArray = data.map(item => item.tak);\n  const lastTakValue = takArray[takArray.length - 1];\n  console.log('Last Tak Value:', lastTakValue); // 'tak' 값을 배열로 추출\n  const phArray = data.map(item => item.ph);\n  const lastPhValue = phArray[phArray.length - 1];\n  console.log('Last pH Value:', lastPhValue); // 'ph' 값을 배열로 추출\n  const doArray = data.map(item => item.do);\n  const lastDoValue = doArray[doArray.length - 1];\n  console.log('Last DO Value:', lastDoValue); // 'do' 값을 배열로 추출\n\n  // 추출한 값을 변수로 사용할 수 있음\n}).catch(error => {\n  console.error('Error:', error);\n});\naxios.get('http://43.200.120.63/api/Node2').then(data2 => {\n  console.log(data2);\n});\naxios.get('http://43.200.120.63/api/Node3').then(data3 => {\n  console.log(data3);\n});","map":{"version":3,"names":["createApp","App","router","axios","use","mount","get","then","response","console","log","data","tempArray","map","item","temp","lastTempValue","length","takArray","tak","lastTakValue","phArray","ph","lastPhValue","doArray","do","lastDoValue","catch","error","data2","data3"],"sources":["C:/Users/User/Desktop/graduationwork/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\nimport App from './App.vue'\nimport 'bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport router from './router.js'\nimport axios from 'axios'\ncreateApp(App).use(router).mount('#app')\naxios.get('http://43.200.120.63/api/Node1').then((response) => {\n    // 데이터 가져오기\n    console.log(response)\n    const data = response.data; // 'data' 배열을 변수에 저장\n\n    // 데이터의 각 요소에서 필요한 값을 변수로 추출\n    const tempArray = data.map(item => item.temp); // 'temp' 값을 배열로 추출\n    const lastTempValue = tempArray[tempArray.length - 1]; //현재 temp값\n    const takArray = data.map(item => item.tak);\n    const lastTakValue = takArray[takArray.length - 1];\n    console.log('Last Tak Value:', lastTakValue);   // 'tak' 값을 배열로 추출\n    const phArray = data.map(item => item.ph);\n    const lastPhValue = phArray[phArray.length - 1];\n    console.log('Last pH Value:', lastPhValue);     // 'ph' 값을 배열로 추출\n    const doArray = data.map(item => item.do);\n    const lastDoValue = doArray[doArray.length - 1];\n    console.log('Last DO Value:', lastDoValue);     // 'do' 값을 배열로 추출\n\n    // 추출한 값을 변수로 사용할 수 있음\n   \n}).catch((error) => {\n    console.error('Error:', error);\n});\naxios.get('http://43.200.120.63/api/Node2').then((data2) => {\n    console.log(data2)\n})\naxios.get('http://43.200.120.63/api/Node3').then((data3) => {\n    console.log(data3)\n})"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAO,WAAW;AAClB,OAAO,sCAAsC;AAC7C,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzBH,SAAS,CAACC,GAAG,CAAC,CAACG,GAAG,CAACF,MAAM,CAAC,CAACG,KAAK,CAAC,MAAM,CAAC;AACxCF,KAAK,CAACG,GAAG,CAAC,gCAAgC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;EAC3D;EACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EACrB,MAAMG,IAAI,GAAGH,QAAQ,CAACG,IAAI,CAAC,CAAC;;EAE5B;EACA,MAAMC,SAAS,GAAGD,IAAI,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;EAC/C,MAAMC,aAAa,GAAGJ,SAAS,CAACA,SAAS,CAACK,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;EACvD,MAAMC,QAAQ,GAAGP,IAAI,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACK,GAAG,CAAC;EAC3C,MAAMC,YAAY,GAAGF,QAAQ,CAACA,QAAQ,CAACD,MAAM,GAAG,CAAC,CAAC;EAClDR,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEU,YAAY,CAAC,CAAC,CAAG;EAChD,MAAMC,OAAO,GAAGV,IAAI,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACQ,EAAE,CAAC;EACzC,MAAMC,WAAW,GAAGF,OAAO,CAACA,OAAO,CAACJ,MAAM,GAAG,CAAC,CAAC;EAC/CR,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEa,WAAW,CAAC,CAAC,CAAK;EAChD,MAAMC,OAAO,GAAGb,IAAI,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACW,EAAE,CAAC;EACzC,MAAMC,WAAW,GAAGF,OAAO,CAACA,OAAO,CAACP,MAAM,GAAG,CAAC,CAAC;EAC/CR,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEgB,WAAW,CAAC,CAAC,CAAK;;EAEhD;AAEJ,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;EAChBnB,OAAO,CAACmB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;AAClC,CAAC,CAAC;AACFzB,KAAK,CAACG,GAAG,CAAC,gCAAgC,CAAC,CAACC,IAAI,CAAEsB,KAAK,IAAK;EACxDpB,OAAO,CAACC,GAAG,CAACmB,KAAK,CAAC;AACtB,CAAC,CAAC;AACF1B,KAAK,CAACG,GAAG,CAAC,gCAAgC,CAAC,CAACC,IAAI,CAAEuB,KAAK,IAAK;EACxDrB,OAAO,CAACC,GAAG,CAACoB,KAAK,CAAC;AACtB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}