{"ast":null,"code":"import { Line } from 'vue-chartjs';\nimport { Chart as ChartJS, Title, Tooltip, Legend, CategoryScale, LinearScale, PointElement, LineElement } from 'chart.js';\nimport * as chartConfig from '../assets/chartConfig.js';\nChartJS.register(Title, Tooltip, Legend, CategoryScale, LinearScale, PointElement, LineElement);\nexport default {\n  name: 'CombinedChart',\n  components: {\n    Line\n  },\n  data() {\n    return {\n      options2: chartConfig.options,\n      lineChartData: chartConfig.data,\n      lineChartData2: chartConfig.data4,\n      lineChartData3: chartConfig.data3,\n      lineChartData4: chartConfig.data2\n    };\n  },\n  created() {\n    // 페이지가 처음 생성될 때 로컬 스토리지에서 데이터를 로드\n    const loadedData = this.loadData('myData');\n    if (loadedData) {\n      this.lineChartData = loadedData.lineChartData;\n      this.lineChartData2 = loadedData.lineChartData2;\n      this.lineChartData3 = loadedData.lineChartData3;\n      this.lineChartData4 = loadedData.lineChartData4;\n    }\n  },\n  methods: {\n    saveData(key, data) {\n      localStorage.setItem(key, JSON.stringify(data));\n    },\n    loadData(key) {\n      const data = localStorage.getItem(key);\n      if (data) {\n        return JSON.parse(data);\n      }\n      return null;\n    }\n  }\n};","map":{"version":3,"names":["Line","Chart","ChartJS","Title","Tooltip","Legend","CategoryScale","LinearScale","PointElement","LineElement","chartConfig","register","name","components","data","options2","options","lineChartData","lineChartData2","data4","lineChartData3","data3","lineChartData4","data2","created","loadedData","loadData","methods","saveData","key","localStorage","setItem","JSON","stringify","getItem","parse"],"sources":["C:\\Users\\User\\OneDrive\\바탕 화면\\graduationwork\\src\\components\\BarChart.vue"],"sourcesContent":["<template>\n  \n\n<div>\n  <div class=\"status_of_node\">\n    <div class=\"status_of_node-item\">\n      <span class=\"status_of_node-label\" style=\"font-size: 36px;\">상태</span>\n      <span class=\"status_of_node-value\" style=\"font-size: 48px;\">매우 좋음</span>\n    </div>\n  </div>\n  <div class=\"chart-grid\">\n    <div class=\"chart-item\">\n      <Line :data=\"lineChartData2\" :options=\"options2\" />\n      <h3>용존산소량</h3>\n    </div>\n    <div class=\"chart-item\">\n      <Line :data=\"lineChartData\" :options=\"options2\" />\n      <h3>수온</h3>\n    </div>\n    <div class=\"chart-item\">\n      <Line :data=\"lineChartData4\" :options=\"options2\" />\n      <h3>PH</h3>\n    </div>\n    <div class=\"chart-item\">\n      <Line :data=\"lineChartData3\" :options=\"options2\" />\n      <h3>탁도</h3>\n    </div>\n  </div>\n</div>\n<div>\n\n  <div class=\"status\">\n    <div class=\"status-item\">\n      <div class=\"status-label\">용존산소량</div>\n      <div class=\"status-value\" >{{ lineChartData2.datasets[0].data[lineChartData.labels.length - 1] }}</div>\n    </div>\n    <div class=\"status-item\">\n      <div class=\"status-label\">탁도</div>\n      <div class=\"status-value\">{{ lineChartData3.datasets[0].data[lineChartData.labels.length - 1] }}NTU</div>\n    </div>\n    <div class=\"status-item\">\n      <div class=\"status-label\">수온</div>\n      <div class=\"status-value\">{{ lineChartData.datasets[0].data[lineChartData.labels.length - 1]}}°C </div>\n    </div>\n    <div class=\"status-item\">\n      <div class=\"status-label\">PH</div>\n      <div class=\"status-value\">{{ lineChartData4.datasets[0].data[lineChartData.labels.length - 1] }}PH</div>\n      \n        \n    </div>\n  </div>\n  </div>\n</template>\n\n<script>\nimport { Line } from 'vue-chartjs'\nimport { Chart as ChartJS, Title, Tooltip, Legend, CategoryScale, LinearScale, PointElement, LineElement } from 'chart.js'\nimport * as chartConfig from '../assets/chartConfig.js'\n\nChartJS.register(\n  Title,\n  Tooltip,\n  Legend,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement\n)\n\nexport default {\n  name: 'CombinedChart',\n  components: {\n    Line \n  },\n  data() {\n    return {\n      options2: chartConfig.options,\n      lineChartData: chartConfig.data,\n      lineChartData2: chartConfig.data4,\n      lineChartData3: chartConfig.data3,\n      lineChartData4: chartConfig.data2,\n    };\n  },\n  created() {\n    // 페이지가 처음 생성될 때 로컬 스토리지에서 데이터를 로드\n    const loadedData = this.loadData('myData');\n    if (loadedData) {\n      this.lineChartData = loadedData.lineChartData;\n      this.lineChartData2 = loadedData.lineChartData2;\n      this.lineChartData3 = loadedData.lineChartData3;\n      this.lineChartData4 = loadedData.lineChartData4;\n    }\n  },\n  methods: {\n    saveData(key, data) {\n      localStorage.setItem(key, JSON.stringify(data));\n    },\n    loadData(key) {\n      const data = localStorage.getItem(key);\n      if (data) {\n        return JSON.parse(data);\n      }\n      return null;\n    }\n  }\n}\n</script>\n\n<style>\n.status {\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  background-color: #f8f9fa;\n  padding: 10px;\n  height: 80px; /* Adjust the height as needed */\n  width: 90%;\n  max-width: 300%;\n  margin: 0 auto;\n}\n.status_of_node {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #f8f9fa;\n  padding: 20px; /* 원하는 패딩 크기로 조정하세요 */\n  max-width: 100%;\n  margin: 10px auto; /* 가운데 정렬을 위해 margin 수정 */\n  text-align: center; /* 텍스트 가운데 정렬 추가 */\n}\n\n.status_of_node-item {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.status_of_node-label {\n  font-size: 36px; /* 라벨의 글자 크기를 36px로 수정 */\n  font-weight: bold;\n}\n\n.status_of_node-value {\n  font-size: 48px; /* 값의 글자 크기를 48px로 수정 */\n  font-weight: bold;\n  color: #007bff;\n  margin-top: 10px; /* 상단 마진을 조금 더 늘립니다 */\n}\n.status {\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  background-color: #f8f9fa;\n  padding: 100px;\n  height: 100px; /* Adjust the height as needed */\n  width: 300%;\n  margin: 10 auto;\n}\n\n.status-item {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.status-label {\n  font-size: 16px;\n  font-weight: bold;\n}\n\n.status-value {\n  font-size: 24px;\n  font-weight: bold;\n  color: #007bff;\n  margin-top: 5px;\n}\n.chart {\n  height: 800px;\n  width: 80%;\n  max-width: 100vw;\n  margin: 0 auto;\n}\n.chart-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1fr;\n  gap: 10px;\n  height: 100vh;\n}\n\n.chart-bar {\n  height: 100%;\n  width: 100%;\n  max-width: 100vw;\n  margin: 0 auto;\n}\n\n.chart-grid {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n  gap: 10px;\n}\n\n.chart-item {\n  height: 100%;\n  width: 100%;\n  max-width: 100%;\n}\n</style>"],"mappings":"AAuDA,SAASA,IAAG,QAAS,aAAY;AACjC,SAASC,KAAI,IAAKC,OAAO,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAU,QAAS,UAAS;AACzH,OAAO,KAAKC,WAAU,MAAO,0BAAyB;AAEtDR,OAAO,CAACS,QAAQ,CACdR,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WACF;AAEA,eAAe;EACbG,IAAI,EAAE,eAAe;EACrBC,UAAU,EAAE;IACVb;EACF,CAAC;EACDc,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAEL,WAAW,CAACM,OAAO;MAC7BC,aAAa,EAAEP,WAAW,CAACI,IAAI;MAC/BI,cAAc,EAAER,WAAW,CAACS,KAAK;MACjCC,cAAc,EAAEV,WAAW,CAACW,KAAK;MACjCC,cAAc,EAAEZ,WAAW,CAACa;IAC9B,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,MAAMC,UAAS,GAAI,IAAI,CAACC,QAAQ,CAAC,QAAQ,CAAC;IAC1C,IAAID,UAAU,EAAE;MACd,IAAI,CAACR,aAAY,GAAIQ,UAAU,CAACR,aAAa;MAC7C,IAAI,CAACC,cAAa,GAAIO,UAAU,CAACP,cAAc;MAC/C,IAAI,CAACE,cAAa,GAAIK,UAAU,CAACL,cAAc;MAC/C,IAAI,CAACE,cAAa,GAAIG,UAAU,CAACH,cAAc;IACjD;EACF,CAAC;EACDK,OAAO,EAAE;IACPC,QAAQA,CAACC,GAAG,EAAEf,IAAI,EAAE;MAClBgB,YAAY,CAACC,OAAO,CAACF,GAAG,EAAEG,IAAI,CAACC,SAAS,CAACnB,IAAI,CAAC,CAAC;IACjD,CAAC;IACDY,QAAQA,CAACG,GAAG,EAAE;MACZ,MAAMf,IAAG,GAAIgB,YAAY,CAACI,OAAO,CAACL,GAAG,CAAC;MACtC,IAAIf,IAAI,EAAE;QACR,OAAOkB,IAAI,CAACG,KAAK,CAACrB,IAAI,CAAC;MACzB;MACA,OAAO,IAAI;IACb;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}