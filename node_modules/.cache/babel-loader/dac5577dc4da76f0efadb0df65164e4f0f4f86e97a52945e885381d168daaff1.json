{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport router from './router.js';\nimport axios from 'axios';\ncreateApp(App).use(router).mount('#app');\n// axios.get('http://43.200.120.63/api/Node1').then((response) => {\n//     // 데이터 가져오기\n//     console.log(response)\n//     const data = response.data; // 'data' 배열을 변수에 저장\n\n//     // 데이터의 각 요소에서 필요한 값을 변수로 추출\n//     const tempArray = data.map(item => item.temp); // 'temp' 값을 배열로 추출\n//     const lastTempValue = tempArray[tempArray.length - 1]; //현재 temp값\n//     const takArray = data.map(item => item.tak);\n//     const lastTakValue = takArray[takArray.length - 1];\n//     console.log('Last Tak Value:', lastTakValue);   // 'tak' 값을 배열로 추출\n//     const phArray = data.map(item => item.ph);\n//     const lastPhValue = phArray[phArray.length - 1];\n//     console.log('Last pH Value:', lastPhValue);     // 'ph' 값을 배열로 추출\n//     const doArray = data.map(item => item.do);\n//     const lastDoValue = doArray[doArray.length - 1];\n//     console.log('Last DO Value:', lastDoValue);     // 'do' 값을 배열로 추출\n\n//     // 추출한 값을 변수로 사용할 수 있음\n//     console.log('Temperature Array:', tempArray);\n//     console.log('Last Temperature Value:', lastTempValue);\n//     console.log('Tak Array:', takArray);\n//     console.log('pH Array:', phArray);\n//     console.log('DO Array:', doArray);\n// }).catch((error) => {\n//     console.error('Error:', error);\n// });\n// axios.get('http://43.200.120.63/api/Node2').then((data2) => {\n//     console.log(data2)\n// })\n// axios.get('http://43.200.120.63/api/Node3').then((data3) => {\n//     console.log(data3)\n// })\n\n// data = [lastDoValue,last]","map":{"version":3,"names":["createApp","App","router","axios","use","mount"],"sources":["C:/Users/User/Desktop/graduationwork/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\nimport App from './App.vue'\nimport 'bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport router from './router.js'\nimport axios from 'axios'\ncreateApp(App).use(router).mount('#app')\n// axios.get('http://43.200.120.63/api/Node1').then((response) => {\n//     // 데이터 가져오기\n//     console.log(response)\n//     const data = response.data; // 'data' 배열을 변수에 저장\n\n//     // 데이터의 각 요소에서 필요한 값을 변수로 추출\n//     const tempArray = data.map(item => item.temp); // 'temp' 값을 배열로 추출\n//     const lastTempValue = tempArray[tempArray.length - 1]; //현재 temp값\n//     const takArray = data.map(item => item.tak);\n//     const lastTakValue = takArray[takArray.length - 1];\n//     console.log('Last Tak Value:', lastTakValue);   // 'tak' 값을 배열로 추출\n//     const phArray = data.map(item => item.ph);\n//     const lastPhValue = phArray[phArray.length - 1];\n//     console.log('Last pH Value:', lastPhValue);     // 'ph' 값을 배열로 추출\n//     const doArray = data.map(item => item.do);\n//     const lastDoValue = doArray[doArray.length - 1];\n//     console.log('Last DO Value:', lastDoValue);     // 'do' 값을 배열로 추출\n\n//     // 추출한 값을 변수로 사용할 수 있음\n//     console.log('Temperature Array:', tempArray);\n//     console.log('Last Temperature Value:', lastTempValue);\n//     console.log('Tak Array:', takArray);\n//     console.log('pH Array:', phArray);\n//     console.log('DO Array:', doArray);\n// }).catch((error) => {\n//     console.error('Error:', error);\n// });\n// axios.get('http://43.200.120.63/api/Node2').then((data2) => {\n//     console.log(data2)\n// })\n// axios.get('http://43.200.120.63/api/Node3').then((data3) => {\n//     console.log(data3)\n// })\n\n// data = [lastDoValue,last]"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAO,WAAW;AAClB,OAAO,sCAAsC;AAC7C,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzBH,SAAS,CAACC,GAAG,CAAC,CAACG,GAAG,CAACF,MAAM,CAAC,CAACG,KAAK,CAAC,MAAM,CAAC;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}